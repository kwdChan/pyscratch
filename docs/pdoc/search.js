window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "pyscratch", "modulename": "pyscratch", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event", "modulename": "pyscratch.event", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Event", "modulename": "pyscratch.event", "qualname": "Event", "kind": "class", "doc": "<p>A low level Event class. \nYou do not need to create the Event object yourself. \nThey are instead returned by functions like <code>sprite.when_game_started()</code></p>\n\n<p>If you do want to create your custom event, you need to create it from <code>pysc.game.create_event</code>.\nBut before you do decide to create your custom event, consider using the message event.</p>\n", "bases": "typing.Generic[~P]"}, {"fullname": "pyscratch.event.Event.add_handler", "modulename": "pyscratch.event", "qualname": "Event.add_handler", "kind": "function", "doc": "<p>Add a handler function to this event. \nWhen the event is triggered, the handler functions are called, taking in the parameters passed on by the triggers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">P</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Event.trigger", "modulename": "pyscratch.event", "qualname": "Event.trigger", "kind": "function", "doc": "<p>Trigger the event. The parameters will be passed on to the event handlers.</p>\n\n<p>You will not need to run this method unless you are creating a custom event from <code>pysc.game.create_event</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"n\">P</span><span class=\"o\">.</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Event.stay_active", "modulename": "pyscratch.event", "qualname": "Event.stay_active", "kind": "variable", "doc": "<p>Shows whether this event is removed or scheduled to be removed.</p>\n", "annotation": ": bool"}, {"fullname": "pyscratch.event.Event.remove", "modulename": "pyscratch.event", "qualname": "Event.remove", "kind": "function", "doc": "<p>Schedule this event to be removed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Event.soft_remove", "modulename": "pyscratch.event", "qualname": "Event.soft_remove", "kind": "function", "doc": "<p>Schedule this event to be removed only when all the generators (yield functions) finish</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Condition", "modulename": "pyscratch.event", "qualname": "Condition", "kind": "class", "doc": "<p>TODO: documentation</p>\n", "bases": "_ConditionInterface"}, {"fullname": "pyscratch.event.Condition.__init__", "modulename": "pyscratch.event", "qualname": "Condition.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">checker</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[],</span> <span class=\"nb\">bool</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">Condition</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span>)</span>"}, {"fullname": "pyscratch.event.Condition.trigger", "modulename": "pyscratch.event", "qualname": "Condition.trigger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Condition.repeat_remains", "modulename": "pyscratch.event", "qualname": "Condition.repeat_remains", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Condition.checker", "modulename": "pyscratch.event", "qualname": "Condition.checker", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Condition.remove", "modulename": "pyscratch.event", "qualname": "Condition.remove", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Condition.soft_remove", "modulename": "pyscratch.event", "qualname": "Condition.soft_remove", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Condition.stay_active", "modulename": "pyscratch.event", "qualname": "Condition.stay_active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Condition.add_handler", "modulename": "pyscratch.event", "qualname": "Condition.add_handler", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Condition.change_checker", "modulename": "pyscratch.event", "qualname": "Condition.change_checker", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">checker</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Condition</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.TimerCondition", "modulename": "pyscratch.event", "qualname": "TimerCondition", "kind": "class", "doc": "<p>TODO: documentation</p>\n", "bases": "_ConditionInterface"}, {"fullname": "pyscratch.event.TimerCondition.__init__", "modulename": "pyscratch.event", "qualname": "TimerCondition.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reset_period</span><span class=\"o\">=</span><span class=\"n\">inf</span>, </span><span class=\"param\"><span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"n\">inf</span></span>)</span>"}, {"fullname": "pyscratch.event.TimerCondition.trigger", "modulename": "pyscratch.event", "qualname": "TimerCondition.trigger", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.TimerCondition.repeat_remains", "modulename": "pyscratch.event", "qualname": "TimerCondition.repeat_remains", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.TimerCondition.timer", "modulename": "pyscratch.event", "qualname": "TimerCondition.timer", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.TimerCondition.period", "modulename": "pyscratch.event", "qualname": "TimerCondition.period", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.TimerCondition.remove", "modulename": "pyscratch.event", "qualname": "TimerCondition.remove", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.TimerCondition.soft_remove", "modulename": "pyscratch.event", "qualname": "TimerCondition.soft_remove", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.TimerCondition.stay_active", "modulename": "pyscratch.event", "qualname": "TimerCondition.stay_active", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.TimerCondition.add_handler", "modulename": "pyscratch.event", "qualname": "TimerCondition.add_handler", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">callback</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">],</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Timer", "modulename": "pyscratch.event", "qualname": "Timer", "kind": "class", "doc": "<p>Create a timer that resets every <code>reset_period</code> seconds.</p>\n"}, {"fullname": "pyscratch.event.Timer.__init__", "modulename": "pyscratch.event", "qualname": "Timer.__init__", "kind": "function", "doc": "<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>reset_period</strong> (float):\nThe reset period. Pass in np.inf for no reset</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reset_period</span><span class=\"o\">=</span><span class=\"n\">inf</span></span>)</span>"}, {"fullname": "pyscratch.event.Timer.reset_period", "modulename": "pyscratch.event", "qualname": "Timer.reset_period", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.event.Timer.n_period", "modulename": "pyscratch.event", "qualname": "Timer.n_period", "kind": "variable", "doc": "<p>How many times the <code>reset_period</code> have passed</p>\n"}, {"fullname": "pyscratch.event.Timer.read", "modulename": "pyscratch.event", "qualname": "Timer.read", "kind": "function", "doc": "<p>Read the timer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.event.Timer.full_reset", "modulename": "pyscratch.event", "qualname": "Timer.full_reset", "kind": "function", "doc": "<p>Reset the timer and the <code>n_period</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module", "modulename": "pyscratch.game_module", "kind": "module", "doc": "<p>Everything in this module is directly under the pyscratch namespace. \nFor example, instead of <code>pysc.game_module.is_key_pressed</code>, you can also directly do <code>pysc.is_key_pressed</code></p>\n"}, {"fullname": "pyscratch.game_module.Game", "modulename": "pyscratch.game_module", "qualname": "Game", "kind": "class", "doc": "<p>This is the class that the <code>game</code> object belongs to. You cannot create another Game object.</p>\n"}, {"fullname": "pyscratch.game_module.Game.shared_data", "modulename": "pyscratch.game_module", "qualname": "Game.shared_data", "kind": "variable", "doc": "<p>A dictionary of variables shared across the entire game. You can put anything in it.</p>\n", "annotation": ": Dict[Any, Any]"}, {"fullname": "pyscratch.game_module.Game.backdrops", "modulename": "pyscratch.game_module", "qualname": "Game.backdrops", "kind": "variable", "doc": "<p>A list of all the loaded backdrop images. You will not need to interact with this property directly.</p>\n", "annotation": ": List[pygame.surface.Surface]"}, {"fullname": "pyscratch.game_module.Game.update_screen_mode", "modulename": "pyscratch.game_module", "qualname": "Game.update_screen_mode", "kind": "function", "doc": "<p>Update the screen, taking the arguments for \n<a href=\"https://www.pygame.org/docs/ref/display.html#pygame.display.set_mode\"><code>pygame.display.set_mode</code></a>.</p>\n\n<p>Use this method to change the screen size:</p>\n\n<p><code>game.update_screen_mode((SCREEN_WIDTH, SCREEN_HEIGHT))</code></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">arg</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.start", "modulename": "pyscratch.game_module", "qualname": "Game.start", "kind": "function", "doc": "<p>Start the game. </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>framerate</strong> (int):\nThe number of frames per second</li>\n<li><strong>sim_step_min</strong> (int):\nThe number of physics steps per second. Increase this value if the physics is unstable and decrease it if the game runs slow.</li>\n<li><strong>debug_draw</strong> (bool):\nWhether or not to draw the collision shape for debugging purposes</li>\n<li><strong>event_count</strong> (bool):\nWhether or not to print out the number of active events for debugging purposes</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">framerate</span>,</span><span class=\"param\">\t<span class=\"n\">sim_step_min</span><span class=\"o\">=</span><span class=\"mi\">300</span>,</span><span class=\"param\">\t<span class=\"n\">debug_draw</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">event_count</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.load_sound", "modulename": "pyscratch.game_module", "qualname": "Game.load_sound", "kind": "function", "doc": "<p>Load the sound given a path, and index it with the key so it can be played later by <code>play_sound</code></p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">load_sound</span><span class=\"p\">(</span><span class=\"s1\">&#39;sound1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path/to/sound.wav&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">play_sound</span><span class=\"p\">(</span><span class=\"s1\">&#39;sound1&#39;</span><span class=\"p\">,</span> <span class=\"n\">volume</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.play_sound", "modulename": "pyscratch.game_module", "qualname": "Game.play_sound", "kind": "function", "doc": "<p>Play the sound given a key. \nThis method does not wait for the sound to finish playing. </p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">load_sound</span><span class=\"p\">(</span><span class=\"s1\">&#39;sound1&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;path/to/sound.wav&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">play_sound</span><span class=\"p\">(</span><span class=\"s1\">&#39;sound1&#39;</span><span class=\"p\">,</span> <span class=\"n\">volume</span><span class=\"o\">=</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">volume</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.read_timer", "modulename": "pyscratch.game_module", "qualname": "Game.read_timer", "kind": "function", "doc": "<p>get the time (in seconds) since the game started.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.set_gravity", "modulename": "pyscratch.game_module", "qualname": "Game.set_gravity", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>Change the gravity of the space. Works for sprites with dynamic body type only, which is not the default.\nIt will NOT work unless you explicitly make the sprite to have a dynamic body.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">xy</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.remove_sprite", "modulename": "pyscratch.game_module", "qualname": "Game.remove_sprite", "kind": "function", "doc": "<p>Remove the sprite from the game.</p>\n\n<p>You can use the alias <code>Sprite.remove()</code> to do the same.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.show_sprite", "modulename": "pyscratch.game_module", "qualname": "Game.show_sprite", "kind": "function", "doc": "<p>Show the sprite. </p>\n\n<p>You can use the alias <code>sprite.show()</code> to do the same.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.hide_sprite", "modulename": "pyscratch.game_module", "qualname": "Game.hide_sprite", "kind": "function", "doc": "<p>Hide the sprite. </p>\n\n<p>You can use the alias <code>sprite.hide()</code> to do the same.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.bring_to_front", "modulename": "pyscratch.game_module", "qualname": "Game.bring_to_front", "kind": "function", "doc": "<p>Bring the sprite to the front. \nAnalogous to the \"go to [front] layer\" block in Scratch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.move_to_back", "modulename": "pyscratch.game_module", "qualname": "Game.move_to_back", "kind": "function", "doc": "<p>Move the sprite to the back. \nAnalogous to the \"go to [back] layer\" block in Scratch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.change_layer", "modulename": "pyscratch.game_module", "qualname": "Game.change_layer", "kind": "function", "doc": "<p>Bring the sprite to a specific layer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span>, </span><span class=\"param\"><span class=\"n\">layer</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.change_layer_by", "modulename": "pyscratch.game_module", "qualname": "Game.change_layer_by", "kind": "function", "doc": "<p>Analogous to the \"go to [forward/backward] [N] layer\" block in Scratch</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span>, </span><span class=\"param\"><span class=\"n\">by</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.get_layer_of_sprite", "modulename": "pyscratch.game_module", "qualname": "Game.get_layer_of_sprite", "kind": "function", "doc": "<p>Returns the layer number of the given sprite</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.set_backdrops", "modulename": "pyscratch.game_module", "qualname": "Game.set_backdrops", "kind": "function", "doc": "<p>Set the list of all available backdrops. This function is meant to be run before the game start. </p>\n\n<p>Example: </p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># load the image into python </span>\n<span class=\"n\">background_image</span> <span class=\"o\">=</span> <span class=\"n\">pysc</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"s1\">&#39;assets/my_background.jpg&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">background_image2</span> <span class=\"o\">=</span> <span class=\"n\">pysc</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"s1\">&#39;assets/my_background2.jpg&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">background_image3</span> <span class=\"o\">=</span> <span class=\"n\">pysc</span><span class=\"o\">.</span><span class=\"n\">helper</span><span class=\"o\">.</span><span class=\"n\">load_image</span><span class=\"p\">(</span><span class=\"s1\">&#39;assets/my_background3.jpg&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># pass in a list of all the available backdrops. </span>\n<span class=\"n\">pysc</span><span class=\"o\">.</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">set_backdrops</span><span class=\"p\">([</span><span class=\"n\">background_image</span><span class=\"p\">,</span> <span class=\"n\">background_image2</span><span class=\"p\">,</span> <span class=\"n\">background_image3</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># choose the backdrop at index 1 (background_image2)</span>\n<span class=\"n\">pysc</span><span class=\"o\">.</span><span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">switch_backdrop</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> \n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">images</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.backdrop_index", "modulename": "pyscratch.game_module", "qualname": "Game.backdrop_index", "kind": "variable", "doc": "<p>The index of the current backdrops. For example, if you do <code>game.switch_backdrop(0)</code>, <code>game.backdrop_index</code> would be <code>0</code>.</p>\n"}, {"fullname": "pyscratch.game_module.Game.switch_backdrop", "modulename": "pyscratch.game_module", "qualname": "Game.switch_backdrop", "kind": "function", "doc": "<p>Change the backdrop by specifying the index of the backdrop.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.next_backdrop", "modulename": "pyscratch.game_module", "qualname": "Game.next_backdrop", "kind": "function", "doc": "<p>Switch to the next backdrop.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_game_start", "modulename": "pyscratch.game_module", "qualname": "Game.when_game_start", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_game_start</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.</p>\n\n<p>Returns an <code>Event</code> that is triggered when you call <code>game.start</code>. \nThe event handler does not take in any parameter.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_any_key_pressed", "modulename": "pyscratch.game_module", "qualname": "Game.when_any_key_pressed", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_any_key_pressed</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered when a key is pressed or released. </p>\n\n<p>The event handler have to take two parameters:</p>\n\n<ul>\n<li><strong>key</strong> (str): The key that is pressed. For example, 'w', 'd', 'left', 'right', 'space'. \nUses <a href=\"https://www.pygame.org/docs/ref/key.html#pygame.key.key_code\">pygame.key.key_code</a> under the hood. </li>\n</ul>\n\n<ul>\n<li><strong>updown</strong> (str): Either 'up' or 'down' that indicates whether it is a press or a release</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_key_pressed", "modulename": "pyscratch.game_module", "qualname": "Game.when_key_pressed", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_key_pressed</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered when a specific key is pressed or released. </p>\n\n<p>The event handler have to take one parameter:</p>\n\n<ul>\n<li><strong>updown</strong> (str): Either 'up' or 'down' that indicates whether it is a press or a release</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>key</strong> (str):\nThe key that triggers the event. For example, 'w', 'd', 'left', 'right', 'space'. \nUses <a href=\"https://www.pygame.org/docs/ref/key.html#pygame.key.key_code\">pygame.key.key_code</a> under the hood.</li>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_this_sprite_clicked", "modulename": "pyscratch.game_module", "qualname": "Game.when_this_sprite_clicked", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_this_sprite_clicked</code> alias instead of this method, \nso you don't need to specify the <code>other_associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered when the given sprite is clicked by mouse.<br />\nThe event handler does not take in any parameter.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sprite</strong> (Sprite):\nThe sprite on which you want the click to be detected. The removal of this sprite will lead to the removal of this event so\nit does not need to be included in <code>other_assoicated_sprite</code></li>\n<li><strong>other_associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sprite</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_backdrop_switched", "modulename": "pyscratch.game_module", "qualname": "Game.when_backdrop_switched", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_backdrop_switched</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered when the game is switched to a backdrop at <code>backdrop_index</code>.</p>\n\n<p>The event handler does not take in any parameter.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>backdrop_index</strong> (int):\nThe index of the backdrop</li>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">backdrop_index</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_any_backdrop_switched", "modulename": "pyscratch.game_module", "qualname": "Game.when_any_backdrop_switched", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_any_backdrop_switched</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered when the backdrop is switched. </p>\n\n<p>The event handler have to take one parameter:</p>\n\n<ul>\n<li><strong>idx</strong> (int): The index of the new backdrop  </li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_timer_above", "modulename": "pyscratch.game_module", "qualname": "Game.when_timer_above", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_timer_above</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns a <code>Condition</code> that is triggered after the game have started for <code>t</code> seconds.\nA <code>Condition</code> works the same way an <code>Event</code> does. </p>\n\n<p>The event handler have to take one parameter:</p>\n\n<ul>\n<li><strong>n</strong> (int): This value will always be zero</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">t</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Condition</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_started_as_clone", "modulename": "pyscratch.game_module", "qualname": "Game.when_started_as_clone", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_started_as_clone</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered after the given sprite is cloned by <code>Sprite.clone_myself</code>.</p>\n\n<p>The event handler have to take one parameter:</p>\n\n<ul>\n<li><strong>clone_sprite</strong> (Sprite): The newly created clone.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sprite</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_receive_message", "modulename": "pyscratch.game_module", "qualname": "Game.when_receive_message", "kind": "function", "doc": "<p>It is recommended to use the <code>Sprite.when_receive_message</code> alias instead of this method, \nso you don't need to specify the <code>associated_sprites</code> in every event.  </p>\n\n<p>Returns an <code>Event</code> that is triggered after a message of the given <code>topic</code> is broadcasted.</p>\n\n<p>The event handler have to take one parameter:</p>\n\n<ul>\n<li><strong>data</strong> (Any): This parameter can be anything passed on by the message.</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic</strong> (str):\nCan be any string. If the topic equals the topic of a broadcast, the event will be triggered.</li>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">[[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.broadcast_message", "modulename": "pyscratch.game_module", "qualname": "Game.broadcast_message", "kind": "function", "doc": "<p>Sends a message of a given <code>topic</code> and <code>data</code>.\nTriggers any event that subscribes to the topic. \nThe handlers of the events will receive <code>data</code> as the parameter.</p>\n\n<p>Example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">event_handler</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span> <span class=\"c1\"># data will be &quot;hello world!&quot;</span>\n\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">when_receive_message</span><span class=\"p\">(</span><span class=\"s1\">&#39;print_message&#39;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">add_handler</span><span class=\"p\">(</span><span class=\"n\">event_handler</span><span class=\"p\">)</span>\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">broadcast_message</span><span class=\"p\">(</span><span class=\"s1\">&#39;print_message&#39;</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"s1\">&#39;hello world!&#39;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># &quot;hello world!&quot; will be printed out</span>\n</code></pre>\n</div>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>topic</strong> (str):\nCan be any string. If the topic of an message event equals the topic of the broadcast, the event will be triggered.</li>\n<li><strong>data</strong> (Any):\nAny arbitory data that will be passed to the event handler</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.create_pygame_event_trigger", "modulename": "pyscratch.game_module", "qualname": "Game.create_pygame_event_trigger", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">flags</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.create_specific_collision_trigger", "modulename": "pyscratch.game_module", "qualname": "Game.create_specific_collision_trigger", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">sprite1</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span>,</span><span class=\"param\">\t<span class=\"n\">sprite2</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.create_type2type_collision_trigger", "modulename": "pyscratch.game_module", "qualname": "Game.create_type2type_collision_trigger", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">type_a</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">type_b</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">collision_suppressed</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.create_type_collision_trigger", "modulename": "pyscratch.game_module", "qualname": "Game.create_type_collision_trigger", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">collision_type</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">collision_suppressed</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.suppress_type_collision", "modulename": "pyscratch.game_module", "qualname": "Game.suppress_type_collision", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">collision_type</span>, </span><span class=\"param\"><span class=\"n\">collision_suppressed</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_timer_reset", "modulename": "pyscratch.game_module", "qualname": "Game.when_timer_reset", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reset_period</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.when_condition_met", "modulename": "pyscratch.game_module", "qualname": "Game.when_condition_met", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>DOCUMENTATION NOT COMPLETED</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">checker</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Game</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.Game.create_event", "modulename": "pyscratch.game_module", "qualname": "Game.create_event", "kind": "function", "doc": "<p><em>EXTENDED FEATURE</em></p>\n\n<p>Create a custom event that you can trigger on your own. \nHowever, consider using the message event before you decide to create your custom event. </p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>associated_sprites</strong> (List[Sprite]):\nA list of sprites that this event depends on. Removal of any of these sprites leads to the removal of the event.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.game", "modulename": "pyscratch.game_module", "qualname": "game", "kind": "variable", "doc": "<p>The singleton Game object. This is the object that represent the game.</p>\n", "default_value": "&lt;pyscratch.game_module.Game object&gt;"}, {"fullname": "pyscratch.game_module.is_key_pressed", "modulename": "pyscratch.game_module", "qualname": "is_key_pressed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.get_mouse_pos", "modulename": "pyscratch.game_module", "qualname": "get_mouse_pos", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.get_mouse_presses", "modulename": "pyscratch.game_module", "qualname": "get_mouse_presses", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.is_touching", "modulename": "pyscratch.game_module", "qualname": "is_touching", "kind": "function", "doc": "<p>pymunk</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sprite_a</span>, </span><span class=\"param\"><span class=\"n\">sprite_b</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.game_module.is_touching_mouse", "modulename": "pyscratch.game_module", "qualname": "is_touching_mouse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper", "modulename": "pyscratch.helper", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "pyscratch.helper.cap", "modulename": "pyscratch.helper", "qualname": "cap", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">v</span>, </span><span class=\"param\"><span class=\"n\">min_v</span>, </span><span class=\"param\"><span class=\"n\">max_v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.random_number", "modulename": "pyscratch.helper", "qualname": "random_number", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_v</span>, </span><span class=\"param\"><span class=\"n\">max_v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.load_image", "modulename": "pyscratch.helper", "qualname": "load_image", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.get_frame", "modulename": "pyscratch.helper", "qualname": "get_frame", "kind": "function", "doc": "<p>WRITTEN BY CHATGPT</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sheet</span>, </span><span class=\"param\"><span class=\"n\">columns</span>, </span><span class=\"param\"><span class=\"n\">rows</span>, </span><span class=\"param\"><span class=\"n\">index</span>, </span><span class=\"param\"><span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">inset</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.save_frame_from_sprite_sheet", "modulename": "pyscratch.helper", "qualname": "save_frame_from_sprite_sheet", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sheet</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span>,</span><span class=\"param\">\t<span class=\"n\">columns</span>,</span><span class=\"param\">\t<span class=\"n\">rows</span>,</span><span class=\"param\">\t<span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">inset</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">folder_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s1\">&#39;png&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.get_frame_sequence", "modulename": "pyscratch.helper", "qualname": "get_frame_sequence", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sheet</span>, </span><span class=\"param\"><span class=\"n\">columns</span>, </span><span class=\"param\"><span class=\"n\">rows</span>, </span><span class=\"param\"><span class=\"n\">indices</span>, </span><span class=\"param\"><span class=\"n\">spacing</span>, </span><span class=\"param\"><span class=\"n\">margin</span>, </span><span class=\"param\"><span class=\"n\">inset</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.get_frame_dict", "modulename": "pyscratch.helper", "qualname": "get_frame_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">sheet</span>, </span><span class=\"param\"><span class=\"n\">columns</span>, </span><span class=\"param\"><span class=\"n\">rows</span>, </span><span class=\"param\"><span class=\"n\">indices_dict</span>, </span><span class=\"param\"><span class=\"n\">spacing</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">margin</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">inset</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.load_frames_from_folder", "modulename": "pyscratch.helper", "qualname": "load_frames_from_folder", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder_path</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">pathlib</span><span class=\"o\">.</span><span class=\"n\">Path</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.create_circle", "modulename": "pyscratch.helper", "qualname": "create_circle", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span>, </span><span class=\"param\"><span class=\"n\">radius</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.create_rect", "modulename": "pyscratch.helper", "qualname": "create_rect", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.scale_and_tile", "modulename": "pyscratch.helper", "qualname": "scale_and_tile", "kind": "function", "doc": "<p>WRITTEN BY AI</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">screen_size</span>, </span><span class=\"param\"><span class=\"n\">scale_factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.scale_to_fill_screen", "modulename": "pyscratch.helper", "qualname": "scale_to_fill_screen", "kind": "function", "doc": "<p>WRITTEN BY AI (lol)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">screen_size</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.scale_to_fit_aspect", "modulename": "pyscratch.helper", "qualname": "scale_to_fit_aspect", "kind": "function", "doc": "<p>WRITTEN BY AI</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">screen_size</span>, </span><span class=\"param\"><span class=\"n\">fit</span><span class=\"o\">=</span><span class=\"s1\">&#39;horizontal&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.set_transparency", "modulename": "pyscratch.helper", "qualname": "set_transparency", "kind": "function", "doc": "<p>Return a copy of the image with the given factor </p>\n\n<p>WRITTEN BY AI</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.helper.adjust_brightness", "modulename": "pyscratch.helper", "qualname": "adjust_brightness", "kind": "function", "doc": "<p>Return a copy of the image with brightness adjusted by the given factor.</p>\n\n<p>Does not work very well for the transparent background of sprite frames </p>\n\n<p>WRITTEN BY AI</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite", "modulename": "pyscratch.sprite", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.create_animated_sprite", "modulename": "pyscratch.sprite", "qualname": "create_animated_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">folder_path</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.create_single_costume_sprite", "modulename": "pyscratch.sprite", "qualname": "create_single_costume_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">image_path</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.create_shared_data_display_sprite", "modulename": "pyscratch.sprite", "qualname": "create_shared_data_display_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span>,</span><span class=\"param\">\t<span class=\"n\">font</span>,</span><span class=\"param\">\t<span class=\"n\">size</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">127</span><span class=\"p\">,</span> <span class=\"mi\">127</span><span class=\"p\">,</span> <span class=\"mi\">127</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">update_period</span><span class=\"o\">=</span><span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.create_circle_sprite", "modulename": "pyscratch.sprite", "qualname": "create_circle_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span>, </span><span class=\"param\"><span class=\"n\">radius</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.create_rect_sprite", "modulename": "pyscratch.sprite", "qualname": "create_rect_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span>, </span><span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.create_edge_sprites", "modulename": "pyscratch.sprite", "qualname": "create_edge_sprites", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">edge_colour</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">collision_type</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">game</span><span class=\"o\">=&lt;</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">game_module</span><span class=\"o\">.</span><span class=\"n\">Game</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.ShapeType", "modulename": "pyscratch.sprite", "qualname": "ShapeType", "kind": "class", "doc": "<p></p>\n", "bases": "enum.Enum"}, {"fullname": "pyscratch.sprite.ShapeType.BOX", "modulename": "pyscratch.sprite", "qualname": "ShapeType.BOX", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ShapeType.BOX: &#x27;box&#x27;&gt;"}, {"fullname": "pyscratch.sprite.ShapeType.CIRCLE", "modulename": "pyscratch.sprite", "qualname": "ShapeType.CIRCLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ShapeType.CIRCLE: &#x27;circle&#x27;&gt;"}, {"fullname": "pyscratch.sprite.ShapeType.CIRCLE_WIDTH", "modulename": "pyscratch.sprite", "qualname": "ShapeType.CIRCLE_WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ShapeType.CIRCLE_WIDTH: &#x27;circle_width&#x27;&gt;"}, {"fullname": "pyscratch.sprite.ShapeType.CIRCLE_HEIGHT", "modulename": "pyscratch.sprite", "qualname": "ShapeType.CIRCLE_HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ShapeType.CIRCLE_HEIGHT: &#x27;circle_height&#x27;&gt;"}, {"fullname": "pyscratch.sprite.Sprite", "modulename": "pyscratch.sprite", "qualname": "Sprite", "kind": "class", "doc": "<p>simple base class for visible game objects</p>\n\n<p>pygame.sprite.Sprite(*groups): return Sprite</p>\n\n<p>The base class for visible game objects. Derived classes will want to\noverride the Sprite.update() method and assign Sprite.image and Sprite.rect\nattributes.  The initializer can accept any number of Group instances that\nthe Sprite will become a member of.</p>\n\n<p>When subclassing the Sprite class, be sure to call the base initializer\nbefore adding the Sprite to Groups.</p>\n", "bases": "pygame.sprite.Sprite"}, {"fullname": "pyscratch.sprite.Sprite.__init__", "modulename": "pyscratch.sprite", "qualname": "Sprite.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">frame_dict</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">starting_mode</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">shape_type</span><span class=\"o\">=&lt;</span><span class=\"n\">ShapeType</span><span class=\"o\">.</span><span class=\"n\">BOX</span><span class=\"p\">:</span> <span class=\"s1\">&#39;box&#39;</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">shape_size_factor</span><span class=\"o\">=</span><span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">body_type</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, {"fullname": "pyscratch.sprite.Sprite.private_data", "modulename": "pyscratch.sprite", "qualname": "Sprite.private_data", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.draggable", "modulename": "pyscratch.sprite", "qualname": "Sprite.draggable", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.set_draggable", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_draggable", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">draggable</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.direction", "modulename": "pyscratch.sprite", "qualname": "Sprite.direction", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.x", "modulename": "pyscratch.sprite", "qualname": "Sprite.x", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.y", "modulename": "pyscratch.sprite", "qualname": "Sprite.y", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.get_rotation", "modulename": "pyscratch.sprite", "qualname": "Sprite.get_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_rotation", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">degree</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.add_rotation", "modulename": "pyscratch.sprite", "qualname": "Sprite.add_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">degree</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.move_indir", "modulename": "pyscratch.sprite", "qualname": "Sprite.move_indir", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">length</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.move_across_dir", "modulename": "pyscratch.sprite", "qualname": "Sprite.move_across_dir", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">length</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.move_xy", "modulename": "pyscratch.sprite", "qualname": "Sprite.move_xy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">xy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_xy", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_xy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">xy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.distance_to", "modulename": "pyscratch.sprite", "qualname": "Sprite.distance_to", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">return_vector</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.distance_to_sprite", "modulename": "pyscratch.sprite", "qualname": "Sprite.distance_to_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span>, </span><span class=\"param\"><span class=\"n\">return_vector</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.point_towards", "modulename": "pyscratch.sprite", "qualname": "Sprite.point_towards", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">position</span>, </span><span class=\"param\"><span class=\"n\">offset_degree</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.point_towards_sprite", "modulename": "pyscratch.sprite", "qualname": "Sprite.point_towards_sprite", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span>, </span><span class=\"param\"><span class=\"n\">offset_degree</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.point_towards_mouse", "modulename": "pyscratch.sprite", "qualname": "Sprite.point_towards_mouse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">offset_degree</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.lock_to", "modulename": "pyscratch.sprite", "qualname": "Sprite.lock_to", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">sprite</span>, </span><span class=\"param\"><span class=\"n\">offset</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.release_position_lock", "modulename": "pyscratch.sprite", "qualname": "Sprite.release_position_lock", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_rotation_style_all_around", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_rotation_style_all_around", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_rotation_style_left_right", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_rotation_style_left_right", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_rotation_style_no_rotation", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_rotation_style_no_rotation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.frame_idx", "modulename": "pyscratch.sprite", "qualname": "Sprite.frame_idx", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.frame_mode", "modulename": "pyscratch.sprite", "qualname": "Sprite.frame_mode", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.set_frame_mode", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_frame_mode", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">new_mode</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_frame", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">idx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.next_frame", "modulename": "pyscratch.sprite", "qualname": "Sprite.next_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.scale_factor", "modulename": "pyscratch.sprite", "qualname": "Sprite.scale_factor", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "pyscratch.sprite.Sprite.set_scale", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_scale", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.scale_by", "modulename": "pyscratch.sprite", "qualname": "Sprite.scale_by", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.flip_horizontal", "modulename": "pyscratch.sprite", "qualname": "Sprite.flip_horizontal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.flip_vertical", "modulename": "pyscratch.sprite", "qualname": "Sprite.flip_vertical", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_brightness", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_brightness", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_transparency", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_transparency", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.write_text", "modulename": "pyscratch.sprite", "qualname": "Sprite.write_text", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">font</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">font</span><span class=\"o\">.</span><span class=\"n\">Font</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">centre</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reset</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.draw", "modulename": "pyscratch.sprite", "qualname": "Sprite.draw", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">image</span><span class=\"p\">:</span> <span class=\"n\">pygame</span><span class=\"o\">.</span><span class=\"n\">surface</span><span class=\"o\">.</span><span class=\"n\">Surface</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">centre</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reset</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.is_touching", "modulename": "pyscratch.sprite", "qualname": "Sprite.is_touching", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">other_sprite</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.is_touching_mouse", "modulename": "pyscratch.sprite", "qualname": "Sprite.is_touching_mouse", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.hide", "modulename": "pyscratch.sprite", "qualname": "Sprite.hide", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.show", "modulename": "pyscratch.sprite", "qualname": "Sprite.show", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.remove", "modulename": "pyscratch.sprite", "qualname": "Sprite.remove", "kind": "function", "doc": "<p>remove the sprite from groups</p>\n\n<p>Sprite.remove(*groups): return None</p>\n\n<p>Any number of Group instances can be passed as arguments. The Sprite\nwill be removed from the Groups it is currently a member of.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">_</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.clone_myself", "modulename": "pyscratch.sprite", "qualname": "Sprite.clone_myself", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_game_start", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_game_start", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_key_pressed", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_key_pressed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">key</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_any_key_pressed", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_any_key_pressed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_this_sprite_clicked", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_this_sprite_clicked", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_backdrop_switched", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_backdrop_switched", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">idx</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_any_backdrop_switched", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_any_backdrop_switched", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_timer_above", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_timer_above", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">t</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_receive_message", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_receive_message", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.broadcast_message", "modulename": "pyscratch.sprite", "qualname": "Sprite.broadcast_message", "kind": "function", "doc": "<p>completely unnecessary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">topic</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_started_as_clone", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_started_as_clone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_condition_met", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_condition_met", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">checker</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">Sprite</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.when_timer_reset", "modulename": "pyscratch.sprite", "qualname": "Sprite.when_timer_reset", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">reset_period</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">repeats</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.create_specific_collision_trigger", "modulename": "pyscratch.sprite", "qualname": "Sprite.create_specific_collision_trigger", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">other_sprite</span><span class=\"p\">:</span> <span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span>,</span><span class=\"param\">\t<span class=\"n\">other_associated_sprites</span><span class=\"p\">:</span> <span class=\"n\">Iterable</span><span class=\"p\">[</span><span class=\"n\">pyscratch</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_mass", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_mass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">mass</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_moment", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_moment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">moment</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_elasticity", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_elasticity", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">elasticity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_friction", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_friction", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">friction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_shape", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_shape", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shape_type</span><span class=\"o\">=</span><span class=\"s1\">&#39;circle&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_shape_size_factor", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_shape_size_factor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"mf\">0.8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "pyscratch.sprite.Sprite.set_collision_type", "modulename": "pyscratch.sprite", "qualname": "Sprite.set_collision_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();